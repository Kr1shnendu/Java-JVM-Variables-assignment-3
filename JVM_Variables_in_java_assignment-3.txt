1. What is the difference between JVM, JRE and JDK?
ans> 
JVM or Java Virtual Machine is a virtual machine that enables a computer to run java programs which are converted to bytecode or .class file by the compiler.
JDK or java development kit is the development platform  used for developing java applications and JRE or java runtime environment which is used for execution of the code by creating MethodArea,StackArea,HeapArea where JVM can function . JVM is included in both JRE and JDK.


2. How is Java programming language machine and platform independent?
ans>
In java , the program written in .java is converted to bytecode in .class file which can be accessed in any machine in any platform. The bytecode (.class file) can run in multiple devices with the help of JVM.If the .class file is shared via internet to different platforms like- desktop,mobile etc then the JVM inside different JDK can run and execute the same code in all platforms.So java programming language is machine and platform independent.


3. Explain how java programs are executed by the JVM?
ans>
Java programs are written in .java file which is converted to .class file by the compiler if there are no CompiletimeError. Then JRE creates MethodArea,StackArea,HeapArea inside the RAM where JVM executes the java program. The .class file containing main() method is loaded to the MethodArea and main() method is stored in StackArea where JVM starts executing. It creates an anonymous type of array of String and collects the arguments passed from the command line and JVM will call main() method by passing the anonymous array. The output generated by JVM is shown in the output screen or get stored to the folder. To create object during execution it uses the heap area to create and destroy using GarbageCollector after the execution is over. After executing the code the methods are deleted from StackArea and .class is unloaded from MethodArea and JRE is also deleted.


4. What is the use of var args?
ans> 
Var-args or variable arguments allow a method to accept a variable number of arguments of the same type. 


5.What are the types of variables in java?
ans> 
Based on the type of value that variable holds,it is of two types-
i.  premitive type (eg: int,short,byte,boolean,double,float,char->which holds premitive values)
ii. referance type (eg: Student s = new Student(); or int[] a=new int[5];  -> which holds the address of a object)
Based on the behavior and position of its declaration ,it is of three types-
i.  instance variable
ii. static variable
iii.local variable


6.How many types of memory areas are allocated by JVM?
ans>
There are mainly three areas allocated by JVM- Method area,Stack area and Heap area. There are also PC registers and Native methods stack area.


7.What is just-in-time Compiler(JIT)?
ans>
It is a part of Java Runtime environment which compiles bytecodes to native machine codes at runtime to improve the performance.
